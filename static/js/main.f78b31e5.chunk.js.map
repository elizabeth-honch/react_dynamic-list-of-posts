{"version":3,"sources":["api/post.js","api/api.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comment.js","components/Comments/Comments.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["request","url","fetch","then","res","json","data","catch","error","getUserPosts","userId","a","posts","filter","post","PostsList","openDetails","selectedPostId","useState","setPost","useEffect","className","map","title","type","onClick","id","NewCommentForm","addComment","name","setName","email","setEmail","comment","setComment","onSubmit","event","preventDefault","body","placeholder","value","onChange","target","getPostComments","postId","comments","deleteComment","commentId","method","JSON","stringify","headers","Comments","key","PostDetails","postDetails","setPostDetails","setComments","hide","setHide","getPostDetails","handleDelete","handleSubmit","newComment","length","App","users","setUsers","setUserId","setSelectedPostId","user","slice","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f78b31e5.chunk.js","sourcesContent":["import { BASE_URL } from './api';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(res => res.json())\n  .then(res => res.data)\n  .catch(error => error);\n\nexport const getUserPosts = async(userId) => {\n  const posts = await request('/posts');\n\n  return (\n    userId\n      ? posts.filter(post => post.userId === userId)\n      : posts\n  );\n};\n\nexport const usersPosts = () => request('/posts');\nexport const usersDataFromServer = () => request(`/users`);\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import React, { useEffect, useState } from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/post'; // getUserPosts\n\nexport const PostsList = ({ userId, openDetails, selectedPostId }) => {\n  const [posts, setPost] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then((post) => {\n        setPost(post);\n      });\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {\n          posts.map(post => (\n            <li className=\"PostsList__item\">\n              <div>\n                <b>{`User # ${post.userId}`}</b>\n                <p>{post.title}</p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => openDetails(post.id)}\n              >\n                {\n                  selectedPostId === post.id\n                    ? 'Close'\n                    : 'Open'\n                }\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  openDetails: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  function onSubmit(event) {\n    event.preventDefault();\n\n    const newComment = {\n      name,\n      email,\n      body: comment,\n    };\n\n    addComment(newComment);\n\n    setName('');\n    setEmail('');\n    setComment('');\n  }\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={onSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={({ target }) => setName(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={comment}\n          onChange={({ target }) => setComment(target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","import { request } from './post';\n\nconst BASE_URL = `https://mate-api.herokuapp.com`;\n\nexport const getPostComments = async(postId) => {\n  const comments = await request('/comments');\n\n  return (\n    postId\n      ? comments.filter(comment => comment.postId === postId)\n      : comments\n  );\n};\n\nexport const deleteComment = async(commentId) => {\n  await fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const addComment = async(comment) => {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(comment),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n};\n","import React from 'react';\n\nexport const Comments = ({ comments, deleteComment }) => (\n  comments.map(comment => (\n    <li key={comment.id} className=\"PostDetails__list-item\">\n      <button\n        type=\"button\"\n        className=\"PostDetails__remove-button button\"\n        onClick={() => deleteComment(comment.id)}\n      >\n        X\n      </button>\n      <p>{comment.body}</p>\n    </li>\n  )));\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/post';\nimport { getPostComments, deleteComment, addComment } from '../../api/comment';\nimport { Comments } from '../Comments/Comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [postDetails, setPostDetails] = useState({});\n  const [comments, setComments] = useState([]);\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then((post) => {\n        setPostDetails(post);\n      });\n  }, [postId]);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then((comment) => {\n        setComments(comment);\n      });\n  }, [postId]);\n\n  const handleDelete = async(commentId) => {\n    await deleteComment(commentId);\n    setComments(await getPostComments(postId));\n  };\n\n  const handleSubmit = async(comment) => {\n    const newComment = {\n      ...comment, postId,\n    };\n\n    await addComment(newComment);\n    setComments(await getPostComments(postId));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{postDetails.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {\n          comments.length\n            ? (\n              <>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => setHide(!hide)}\n                >\n                  {\n                    hide\n                      ? `Show ${comments.length} comments`\n                      : `Hide ${comments.length} comments`\n                  }\n                </button>\n\n                <ul className=\"PostDetails__list\">\n                  {\n                    hide\n                      ? ''\n                      : (\n                        <Comments\n                          comments={comments}\n                          deleteComment={handleDelete}\n                        />\n                      )\n                  }\n                </ul>\n              </>\n            )\n            : <p>My first comment</p>\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={handleSubmit} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { usersDataFromServer } from './api/post';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    usersDataFromServer()\n      .then((user) => {\n        setUsers(user.slice(0, 10));\n      });\n  }, []);\n\n  const selectUserId = ({ target }) => {\n    setUserId(+target.value);\n  };\n\n  const openDetails = (postId) => {\n    if (postId === selectedPostId) {\n      setSelectedPostId(0);\n\n      return;\n    }\n\n    setSelectedPostId(postId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={selectUserId}\n          >\n            <option value=\"0\">All users</option>\n            {\n              users.map((user, index) => (\n                <option value={index + 1} key={user.name}>{user.name}</option>\n              ))\n            }\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            openDetails={openDetails}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            selectedPostId === 0\n              ? <h4>Choose post to see details</h4>\n              : <PostDetails postId={selectedPostId} />\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}