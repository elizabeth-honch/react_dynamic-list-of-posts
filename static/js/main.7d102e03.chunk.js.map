{"version":3,"sources":["api/post.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comment.js","components/Comments/Comments.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["request","url","fetch","then","res","json","data","catch","error","getUserPosts","userId","a","posts","filter","post","PostsList","openDetails","selectedPostId","useState","setPost","useEffect","className","map","title","type","onClick","id","NewCommentForm","name","placeholder","getPostComments","postId","comments","comment","deleteComment","commentId","respones","Comments","handleDelete","key","body","PostDetails","postDetails","setPostDetails","setComments","hide","setHide","getPostDetails","updateComments","commentsFromserver","length","App","users","setUsers","setUserId","setSelectedPostId","user","slice","value","onChange","target","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d102e03.chunk.js","sourcesContent":["const BASE_URL = `https://mate-api.herokuapp.com`;\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(res => res.json())\n  .then(res => res.data)\n  .catch(error => error);\n\nexport const getUserPosts = async(userId) => {\n  const posts = await request('/posts');\n\n  return (\n    userId\n      ? posts.filter(post => post.userId === userId)\n      : posts\n  );\n};\n\nexport const usersPosts = () => request('/posts');\nexport const usersDataFromServer = () => request(`/users`);\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import React, { useEffect, useState } from 'react';\n// import React from 'react'\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/post'; // getUserPosts\n\nexport const PostsList = ({ userId, openDetails, selectedPostId }) => {\n  const [posts, setPost] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then((post) => {\n        setPost(post);\n      });\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {\n          posts.map(post => (\n            <li className=\"PostsList__item\">\n              <div>\n                <b>\n                  [User #\n                  {post.userId}\n                  ]:\n                  {' '}\n                </b>\n                {post.title}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => openDetails(post.id)}\n              >\n                {\n                  selectedPostId === post.id\n                    ? 'Close'\n                    : 'Open'\n                }\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  openDetails: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React from 'react'; // { useState, useEffect }\nimport './NewCommentForm.scss';\n// import { getPostComments } from '../../api/comment';\n\nexport const NewCommentForm = () => (\n// const [comments, setComments] = useState([]);\n\n  // useEffect(() => {\n\n  // }, []);\n\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import { request } from './post';\n\nexport const getPostComments = async(postId) => {\n  const comments = await request('/comments');\n\n  return (\n    postId\n      ? comments.filter(comment => comment.postId === postId)\n      : comments\n  );\n};\n\nexport const deleteComment = async(commentId) => {\n  const respones = await request(`comments/${commentId}`, {\n    method: 'DELETE',\n  });\n\n  return respones;\n};\n","import React from 'react';\n\nexport const Comments = ({ comments, handleDelete }) => (\n  comments.map(comment => (\n    <li key={comment.id} className=\"PostDetails__list-item\">\n      <button\n        type=\"button\"\n        className=\"PostDetails__remove-button button\"\n        onClick={() => handleDelete(comment.id)}\n      >\n        X\n      </button>\n      <p>{comment.body}</p>\n    </li>\n  )));\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/post';\nimport { getPostComments, deleteComment } from '../../api/comment';\nimport { Comments } from '../Comments/Comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [postDetails, setPostDetails] = useState({});\n  const [comments, setComments] = useState([]);\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then((post) => {\n        setPostDetails(post);\n      });\n  }, [postId]);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then((comment) => {\n        setComments(comment);\n      });\n  }, [postId]);\n\n  const updateComments = async() => {\n    const commentsFromserver = await getPostComments(postId);\n\n    setComments(commentsFromserver);\n  };\n\n  const handleDelete = async(commentId) => {\n    await deleteComment(commentId);\n    updateComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{postDetails.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {\n          comments.length\n            ? (\n              <>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => setHide(!hide)}\n                >\n                  {\n                    hide\n                      ? `Show ${comments.length} comments`\n                      : `Hide ${comments.length} comments`\n                  }\n                </button>\n\n                <ul className=\"PostDetails__list\">\n                  {\n                    hide\n                      ? ''\n                      : (\n                        <Comments\n                          comments={comments}\n                          handleDelete={handleDelete}\n                        />\n                      )\n                  }\n                </ul>\n              </>\n            )\n            : <p>My first comment</p>\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm comments={getPostComments} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { usersDataFromServer } from './api/post';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    usersDataFromServer()\n      .then((user) => {\n        setUsers(user.slice(0, 10));\n      });\n  }, []);\n\n  const selectUserId = ({ target }) => {\n    setUserId(+target.value);\n  };\n\n  const openDetails = (postId) => {\n    if (postId === selectedPostId) {\n      setSelectedPostId(0);\n\n      return;\n    }\n\n    setSelectedPostId(postId);\n  };\n\n  // console.log(selectedPostId);\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={selectUserId}\n          >\n            <option value=\"0\">All users</option>\n            {\n              users.map((user, index) => (\n                <option value={index + 1} key={user.name}>{user.name}</option>\n              ))\n            }\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            openDetails={openDetails}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            selectedPostId === 0\n              ? <h4>Choose post to see details</h4>\n              : <PostDetails postId={selectedPostId} />\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}